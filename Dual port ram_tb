`timescale 1ns/100ps
module true_dual_port_ramv1_tb;
  reg [7:0] data_a,data_b;
  reg [5:0] addr_a,addr_b;
  reg we_a,we_b,clk;
  wire [7:0] q_a,q_b;
  
  true_dual_port_ramv1 dut(q_a,q_b,data_a,data_b,addr_a,addr_b,we_a,we_b,clk);
  
  always
    #5 clk=~clk;
  initial 
    $monitor("time=%d \t clk=%b \t we_a=%b \t we_b=%b \t data_a=%b \t data_b=%b \t addr_a=%b \t addr_b=%b \t q_a=%b \t q_b=%b",$time,clk,we_a,we_b,data_a,data_b,addr_a,addr_b,q_a,q_b);
  
  initial begin
    
    clk=0; we_a=0; we_b=0; data_a=0; data_b=0;
    addr_a=0; addr_b=0;
    
    //case 1 port A write and read
    #10;
    we_a=1; data_a=8'hB3; addr_a=3;//write
    #10;
    we_a=0; // read
    
    #10;
    
    //case 2 port B write and read
    we_b=1; data_b=8'hB4; addr_b=4;//write
    #10;
    we_b=0;//read
    
    #10;
    
    //case 3 both ports write to different addresses
    we_a=1; data_a=8'h3; addr_a=5;
    we_b=1; data_b=8'h5; addr_b=6;
    #10;
    
    //disable write
    we_a=0; we_b=0;
    #10;
    
    //case 4 A writes , B reads the same address
    we_a=1; data_a=8'hAA; addr_a=7;
    we_b=0; addr_b=7;
    #10;
    
    we_a=1;
    #10;
    $stop;
  end
endmodule
    
 
